template <typename T> using bmain_ret_t = flit<ag<STP("live"), T, ag<STP("rval"), chdl_void > > >;
template <typename T> using bmain_call_contents_t = ag<STP("live"), T >;
template <typename T> using bmain_call_t = flit<bmain_call_contents_t<T> >;
template <typename OPAQUE> void bmain(bmain_ret_t<OPAQUE> &bmain_ret, bmain_call_t<OPAQUE> &bmain_call);
template <typename T> using tmain_ret_t = flit<ag<STP("live"), T, ag<STP("rval"), chdl_void > > >;
template <typename T> using tmain_call_contents_t = ag<STP("live"), T,ag<STP("arg0"), ui<32> > >;
template <typename T> using tmain_call_t = flit<tmain_call_contents_t<T> >;
template <typename OPAQUE> void tmain(tmain_ret_t<OPAQUE> &tmain_ret, tmain_call_t<OPAQUE> &tmain_call);
template <typename OPAQUE> void bmain(bmain_ret_t<OPAQUE> &bmain_ret, bmain_call_t<OPAQUE> &bmain_call) {

  // bmain BB 0 declarations
  hierarchy_enter("bmain_bb0_decls");
  typedef ag<STP("live"), OPAQUE, ag<STP("args"), bmain_call_contents_t<OPAQUE> >  > bmain_bb0_in_contents_t;
  typedef flit<bmain_bb0_in_contents_t> bmain_bb0_in_t;
  typedef ag<STP("live"), OPAQUE, ag<STP("val1"), ui<32> > > bmain_bb0_out_contents_t;
  typedef flit<bmain_bb0_out_contents_t> bmain_bb0_out_t;
  bmain_bb0_in_t bmain_bb0_in_prebuf, bmain_bb0_in;
  TAP(bmain_bb0_in);
  TAP(bmain_bb0_in_prebuf);
  bmain_bb0_out_t bmain_bb0_out_prebuf;
  bmain_bb0_out_contents_t bmain_bb0_live;
  vec<1, bmain_bb0_out_t> bmain_bb0_out;
  TAP(bmain_bb0_out_prebuf);
  vec<1, bmain_bb0_in_t> bmain_bb0_arb_in;
  TAP(bmain_bb0_arb_in);
  hierarchy_exit();

  // bmain BB 1 declarations
  hierarchy_enter("bmain_bb1_decls");
  typedef ag<STP("live"), OPAQUE, ag<STP("val9"), ui<32> > > bmain_bb1_in_contents_t;
  typedef flit<bmain_bb1_in_contents_t> bmain_bb1_in_t;
  typedef ag<STP("live"), OPAQUE, ag<STP("val9"), ui<32> > > bmain_bb1_out_contents_t;
  typedef flit<bmain_bb1_out_contents_t> bmain_bb1_out_t;
  bmain_bb1_in_t bmain_bb1_in_prebuf, bmain_bb1_in;
  TAP(bmain_bb1_in);
  TAP(bmain_bb1_in_prebuf);
  bmain_bb1_out_t bmain_bb1_out_prebuf;
  bmain_bb1_out_contents_t bmain_bb1_live;
  vec<1, bmain_bb1_out_t> bmain_bb1_out;
  TAP(bmain_bb1_out_prebuf);
  vec<2, bmain_bb1_in_t> bmain_bb1_arb_in;
  TAP(bmain_bb1_arb_in);
  hierarchy_exit();

  // bmain BB 2 declarations
  hierarchy_enter("bmain_bb2_decls");
  typedef ag<STP("live"), OPAQUE, ag<STP("val9"), ui<32> > > bmain_bb2_in_contents_t;
  typedef flit<bmain_bb2_in_contents_t> bmain_bb2_in_t;
  typedef ag<STP("live"), OPAQUE, ag<STP("val5"), ui<32> > > bmain_bb2_out_contents_t;
  typedef flit<bmain_bb2_out_contents_t> bmain_bb2_out_t;
  bmain_bb2_in_t bmain_bb2_in_prebuf, bmain_bb2_in;
  TAP(bmain_bb2_in);
  TAP(bmain_bb2_in_prebuf);
  bmain_bb2_out_t bmain_bb2_out_prebuf;
  bmain_bb2_out_contents_t bmain_bb2_live;
  vec<2, bmain_bb2_out_t> bmain_bb2_out;
  TAP(bmain_bb2_out_prebuf);
  vec<1, bmain_bb2_in_t> bmain_bb2_arb_in;
  TAP(bmain_bb2_arb_in);
  hierarchy_exit();

  // bmain BB 3 declarations
  hierarchy_enter("bmain_bb3_decls");
  typedef ag<STP("live"), OPAQUE > bmain_bb3_in_contents_t;
  typedef flit<bmain_bb3_in_contents_t> bmain_bb3_in_t;
  typedef ag<STP("live"), OPAQUE > bmain_bb3_out_contents_t;
  typedef flit<bmain_bb3_out_contents_t> bmain_bb3_out_t;
  bmain_bb3_in_t bmain_bb3_in_prebuf, bmain_bb3_in;
  TAP(bmain_bb3_in);
  TAP(bmain_bb3_in_prebuf);
  bmain_bb3_out_t bmain_bb3_out_prebuf;
  bmain_bb3_out_contents_t bmain_bb3_live;
  vec<0, bmain_bb3_out_t> bmain_bb3_out;
  TAP(bmain_bb3_out_prebuf);
  vec<1, bmain_bb3_in_t> bmain_bb3_arb_in;
  TAP(bmain_bb3_arb_in);
  hierarchy_exit();

  _(_(bmain_bb0_arb_in[0], "contents"), "args") = _(bmain_call, "contents");
  // bmain BB 0 body
  hierarchy_enter("bmain_bb0");
  _(bmain_bb0_arb_in[0], "valid") = _(bmain_call, "valid");
  _(bmain_call, "ready") = _(bmain_bb0_arb_in[0], "ready");
  _(_(bmain_bb0_arb_in[0], "contents"), "live") = _(_(bmain_call, "contents"), "live");
  BBArbiter(bmain_bb0_in_prebuf, bmain_bb0_arb_in);
  BBInputBuf(bmain_bb0_in, bmain_bb0_in_prebuf);
  node bmain_bb0_run;  TAP(bmain_bb0_run);
  ui<32> bmain_0 = Lit<32>(0x0000000000000000);
  tap("bmain_0", bmain_0);
  ui<32> bmain_1;
  Flatten(bmain_1) = bmain_0;
  tap("bmain_1", bmain_1);
bmain_bb0_run = _(bmain_bb0_in, "valid") &&  _(bmain_bb0_in, "ready");
  _(bmain_bb0_out_prebuf, "valid") = _(bmain_bb0_in, "valid");
  _(bmain_bb0_in, "ready") = _(bmain_bb0_out_prebuf, "ready");
  _(bmain_bb0_live, "val1") = bmain_1;
  _(bmain_bb0_live, "live") = _(_(bmain_bb0_in, "contents"), "live");
  _(bmain_bb0_out_prebuf, "contents") = bmain_bb0_live;
  BBOutputBuf(bmain_bb0_out, bmain_bb0_out_prebuf);
  hierarchy_exit();

  // bmain BB 1 body
  hierarchy_enter("bmain_bb1");
  _(bmain_bb1_arb_in[0], "valid") = _(bmain_bb2_out[0], "valid");
  _(bmain_bb2_out[0], "ready") = _(bmain_bb1_arb_in[0], "ready");
  // BB2 val 5 -> BB 1 val 9
  _(_(bmain_bb1_arb_in[0], "contents"), "val9") = _(_(bmain_bb2_out[0], "contents"), "val5");
  _(_(bmain_bb1_arb_in[0], "contents"), "live") = _(_(bmain_bb2_out[0], "contents"), "live");
  _(bmain_bb1_arb_in[1], "valid") = _(bmain_bb0_out[0], "valid");
  _(bmain_bb0_out[0], "ready") = _(bmain_bb1_arb_in[1], "ready");
  // BB0 val 1 -> BB 1 val 9
  _(_(bmain_bb1_arb_in[1], "contents"), "val9") = _(_(bmain_bb0_out[0], "contents"), "val1");
  _(_(bmain_bb1_arb_in[1], "contents"), "live") = _(_(bmain_bb0_out[0], "contents"), "live");
  BBArbiter(bmain_bb1_in_prebuf, bmain_bb1_arb_in);
  BBInputBuf2(bmain_bb1_in, bmain_bb1_in_prebuf);
  node bmain_bb1_run;  TAP(bmain_bb1_run);
    tap("bmain_9", _(_(bmain_bb1_in, "contents"), "val9"));
  tmain_ret_t<chdl_void > bmain_call_2_ret;
  tmain_call_t<chdl_void > bmain_call_2_args;
  TAP(bmain_call_2_ret);
  TAP(bmain_call_2_args);
  _(bmain_call_2_args, "valid") = bmain_bb1_run;
  _(bmain_call_2_ret, "ready") = Lit(1);
  _(_(bmain_call_2_args, "contents"), "arg0") = _(_(bmain_bb1_in, "contents"), "val9");
  tmain(bmain_call_2_ret, bmain_call_2_args);
bmain_bb1_run = _(bmain_bb1_in, "valid") &&  _(bmain_bb1_in, "ready");
  _(bmain_bb1_out_prebuf, "valid") = _(bmain_bb1_in, "valid") && (_(bmain_call_2_args, "ready"));
  _(bmain_bb1_in, "ready") = _(bmain_bb1_out_prebuf, "ready") && (_(bmain_call_2_args, "ready"));
  _(bmain_bb1_live, "val9") = _(_(bmain_bb1_in, "contents"), "val9");
  _(bmain_bb1_live, "live") = _(_(bmain_bb1_in, "contents"), "live");
  _(bmain_bb1_out_prebuf, "contents") = bmain_bb1_live;
  BBOutputBuf(bmain_bb1_out, bmain_bb1_out_prebuf);
  hierarchy_exit();

  // bmain BB 2 body
  hierarchy_enter("bmain_bb2");
  _(bmain_bb2_arb_in[0], "valid") = _(bmain_bb1_out[0], "valid");
  _(bmain_bb1_out[0], "ready") = _(bmain_bb2_arb_in[0], "ready");
  // BB1 val 9 -> BB 2 val 9
  _(_(bmain_bb2_arb_in[0], "contents"), "val9") = _(_(bmain_bb1_out[0], "contents"), "val9");
  _(_(bmain_bb2_arb_in[0], "contents"), "live") = _(_(bmain_bb1_out[0], "contents"), "live");
  BBArbiter(bmain_bb2_in_prebuf, bmain_bb2_arb_in);
  BBInputBuf(bmain_bb2_in, bmain_bb2_in_prebuf);
  node bmain_bb2_run;  TAP(bmain_bb2_run);
  ui<32> bmain_3 = Lit<32>(0x0000000000000001);
  tap("bmain_3", bmain_3);
  ui<32> bmain_4 = _(_(bmain_bb2_in, "contents"), "val9") + bmain_3;
  tap("bmain_4", bmain_4);
  ui<32> bmain_5;
  Flatten(bmain_5) = bmain_4;
  tap("bmain_5", bmain_5);
  ui<32> bmain_6 = Lit<32>(0x000000000000000a);
  tap("bmain_6", bmain_6);
  node bmain_7 = bmain_5 == bmain_6;
  tap("bmain_7", bmain_7);
bmain_bb2_run = _(bmain_bb2_in, "valid") &&  _(bmain_bb2_in, "ready");
  _(bmain_bb2_out_prebuf, "valid") = _(bmain_bb2_in, "valid");
  _(bmain_bb2_in, "ready") = _(bmain_bb2_out_prebuf, "ready");
  _(bmain_bb2_live, "val5") = bmain_5;
  _(bmain_bb2_live, "live") = _(_(bmain_bb2_in, "contents"), "live");
  _(bmain_bb2_out_prebuf, "contents") = bmain_bb2_live;
  BBOutputBuf(bmain_7, bmain_bb2_out, bmain_bb2_out_prebuf);
  hierarchy_exit();

  // bmain BB 3 body
  hierarchy_enter("bmain_bb3");
  _(bmain_bb3_arb_in[0], "valid") = _(bmain_bb2_out[1], "valid");
  _(bmain_bb2_out[1], "ready") = _(bmain_bb3_arb_in[0], "ready");
  _(_(bmain_bb3_arb_in[0], "contents"), "live") = _(_(bmain_bb2_out[1], "contents"), "live");
  BBArbiter(bmain_bb3_in_prebuf, bmain_bb3_arb_in);
  BBInputBuf(bmain_bb3_in, bmain_bb3_in_prebuf);
  node bmain_bb3_run;  TAP(bmain_bb3_run);
    _(bmain_ret, "valid") = _(bmain_bb3_out_prebuf, "valid");
  _(bmain_bb3_out_prebuf, "ready") = _(bmain_ret, "ready");
  _(_(bmain_ret, "contents"), "live") = _(_(bmain_bb3_out_prebuf, "contents"), "live");
bmain_bb3_run = _(bmain_bb3_in, "valid") &&  _(bmain_bb3_in, "ready");
  _(bmain_bb3_out_prebuf, "valid") = _(bmain_bb3_in, "valid");
  _(bmain_bb3_in, "ready") = _(bmain_bb3_out_prebuf, "ready");
  _(bmain_bb3_live, "live") = _(_(bmain_bb3_in, "contents"), "live");
  _(bmain_bb3_out_prebuf, "contents") = bmain_bb3_live;
  hierarchy_exit();

}
template <typename OPAQUE> void tmain(tmain_ret_t<OPAQUE> &tmain_ret, tmain_call_t<OPAQUE> &tmain_call) {
  STATIC_VAR(tmain, x, ui<32>, 0x00000000, 1);

  // tmain BB 0 declarations
  hierarchy_enter("tmain_bb0_decls");
  typedef ag<STP("live"), OPAQUE, ag<STP("args"), tmain_call_contents_t<OPAQUE> >  > tmain_bb0_in_contents_t;
  typedef flit<tmain_bb0_in_contents_t> tmain_bb0_in_t;
  typedef ag<STP("live"), OPAQUE, ag<STP("val1"), ui<32>, ag<STP("val5"), ui<32> > > > tmain_bb0_out_contents_t;
  typedef flit<tmain_bb0_out_contents_t> tmain_bb0_out_t;
  tmain_bb0_in_t tmain_bb0_in_prebuf, tmain_bb0_in;
  TAP(tmain_bb0_in);
  TAP(tmain_bb0_in_prebuf);
  tmain_bb0_out_t tmain_bb0_out_prebuf;
  tmain_bb0_out_contents_t tmain_bb0_live;
  vec<1, tmain_bb0_out_t> tmain_bb0_out;
  TAP(tmain_bb0_out_prebuf);
  vec<1, tmain_bb0_in_t> tmain_bb0_arb_in;
  TAP(tmain_bb0_arb_in);
  hierarchy_exit();

  // tmain BB 1 declarations
  hierarchy_enter("tmain_bb1_decls");
  typedef ag<STP("live"), OPAQUE, ag<STP("val1"), ui<32>, ag<STP("val13"), ui<32> > > > tmain_bb1_in_contents_t;
  typedef flit<tmain_bb1_in_contents_t> tmain_bb1_in_t;
  typedef ag<STP("live"), OPAQUE, ag<STP("val1"), ui<32>, ag<STP("val8"), ui<32> > > > tmain_bb1_out_contents_t;
  typedef flit<tmain_bb1_out_contents_t> tmain_bb1_out_t;
  tmain_bb1_in_t tmain_bb1_in_prebuf, tmain_bb1_in;
  TAP(tmain_bb1_in);
  TAP(tmain_bb1_in_prebuf);
  tmain_bb1_out_t tmain_bb1_out_prebuf;
  tmain_bb1_out_contents_t tmain_bb1_live;
  vec<2, tmain_bb1_out_t> tmain_bb1_out;
  TAP(tmain_bb1_out_prebuf);
  vec<2, tmain_bb1_in_t> tmain_bb1_arb_in;
  TAP(tmain_bb1_arb_in);
  hierarchy_exit();

  // tmain BB 2 declarations
  hierarchy_enter("tmain_bb2_decls");
  typedef ag<STP("live"), OPAQUE > tmain_bb2_in_contents_t;
  typedef flit<tmain_bb2_in_contents_t> tmain_bb2_in_t;
  typedef ag<STP("live"), OPAQUE > tmain_bb2_out_contents_t;
  typedef flit<tmain_bb2_out_contents_t> tmain_bb2_out_t;
  tmain_bb2_in_t tmain_bb2_in_prebuf, tmain_bb2_in;
  TAP(tmain_bb2_in);
  TAP(tmain_bb2_in_prebuf);
  tmain_bb2_out_t tmain_bb2_out_prebuf;
  tmain_bb2_out_contents_t tmain_bb2_live;
  vec<0, tmain_bb2_out_t> tmain_bb2_out;
  TAP(tmain_bb2_out_prebuf);
  vec<1, tmain_bb2_in_t> tmain_bb2_arb_in;
  TAP(tmain_bb2_arb_in);
  hierarchy_exit();

  _(_(tmain_bb0_arb_in[0], "contents"), "args") = _(tmain_call, "contents");
  // tmain BB 0 body
  hierarchy_enter("tmain_bb0");
  _(tmain_bb0_arb_in[0], "valid") = _(tmain_call, "valid");
  _(tmain_call, "ready") = _(tmain_bb0_arb_in[0], "ready");
  _(_(tmain_bb0_arb_in[0], "contents"), "live") = _(_(tmain_call, "contents"), "live");
  BBArbiter(tmain_bb0_in_prebuf, tmain_bb0_arb_in);
  BBInputBuf(tmain_bb0_in, tmain_bb0_in_prebuf);
  node tmain_bb0_run;  TAP(tmain_bb0_run);
  ui<32> tmain_0 = _(_(_(tmain_bb0_in, "contents"), "args"), "arg0");
  tap("tmain_0", tmain_0);
  ui<32> tmain_1;
  Flatten(tmain_1) = tmain_0;
  tap("tmain_1", tmain_1);
  ui<32> tmain_2;
  Flatten(tmain_2) = tmain_1;
  tap("tmain_2", tmain_2);
  ui<32> tmain_3 = Lit<32>(0x0000000000000001);
  tap("tmain_3", tmain_3);
  ui<32> tmain_4 = tmain_2 + tmain_3;
  tap("tmain_4", tmain_4);
  ui<32> tmain_5;
  Flatten(tmain_5) = tmain_4;
  tap("tmain_5", tmain_5);
tmain_bb0_run = _(tmain_bb0_in, "valid") &&  _(tmain_bb0_in, "ready");
  _(tmain_bb0_out_prebuf, "valid") = _(tmain_bb0_in, "valid");
  _(tmain_bb0_in, "ready") = _(tmain_bb0_out_prebuf, "ready");
  _(tmain_bb0_live, "val1") = tmain_1;
  _(tmain_bb0_live, "val5") = tmain_5;
  _(tmain_bb0_live, "live") = _(_(tmain_bb0_in, "contents"), "live");
  _(tmain_bb0_out_prebuf, "contents") = tmain_bb0_live;
  BBOutputBuf(tmain_bb0_out, tmain_bb0_out_prebuf);
  hierarchy_exit();

  // tmain BB 1 body
  hierarchy_enter("tmain_bb1");
  _(tmain_bb1_arb_in[0], "valid") = _(tmain_bb1_out[0], "valid");
  _(tmain_bb1_out[0], "ready") = _(tmain_bb1_arb_in[0], "ready");
  // BB1 val 1 -> BB 1 val 1
  _(_(tmain_bb1_arb_in[0], "contents"), "val1") = _(_(tmain_bb1_out[0], "contents"), "val1");
  // BB1 val 8 -> BB 1 val 13
  _(_(tmain_bb1_arb_in[0], "contents"), "val13") = _(_(tmain_bb1_out[0], "contents"), "val8");
  _(_(tmain_bb1_arb_in[0], "contents"), "live") = _(_(tmain_bb1_out[0], "contents"), "live");
  _(tmain_bb1_arb_in[1], "valid") = _(tmain_bb0_out[0], "valid");
  _(tmain_bb0_out[0], "ready") = _(tmain_bb1_arb_in[1], "ready");
  // BB0 val 1 -> BB 1 val 1
  _(_(tmain_bb1_arb_in[1], "contents"), "val1") = _(_(tmain_bb0_out[0], "contents"), "val1");
  // BB0 val 5 -> BB 1 val 13
  _(_(tmain_bb1_arb_in[1], "contents"), "val13") = _(_(tmain_bb0_out[0], "contents"), "val5");
  _(_(tmain_bb1_arb_in[1], "contents"), "live") = _(_(tmain_bb0_out[0], "contents"), "live");
  BBArbiter(tmain_bb1_in_prebuf, tmain_bb1_arb_in);
  BBInputBuf2(tmain_bb1_in, tmain_bb1_in_prebuf);
  node tmain_bb1_run;  TAP(tmain_bb1_run);
    tap("tmain_13", _(_(tmain_bb1_in, "contents"), "val13"));
  ui<32> tmain_6 = Lit<32>(0x0000000000000001);
  tap("tmain_6", tmain_6);
  ui<32> tmain_7 = _(_(tmain_bb1_in, "contents"), "val13") - tmain_6;
  tap("tmain_7", tmain_7);
  ui<32> tmain_8;
  Flatten(tmain_8) = tmain_7;
  tap("tmain_8", tmain_8);
  ST_STATIC(tmain, x, _(_(tmain_bb1_in, "contents"), "val1"), tmain_bb1_run, 0);
  ui<32> tmain_10 = Lit<32>(0x0000000000000000);
  tap("tmain_10", tmain_10);
  node tmain_11 = tmain_8 == tmain_10;
  tap("tmain_11", tmain_11);
tmain_bb1_run = _(tmain_bb1_in, "valid") &&  _(tmain_bb1_in, "ready");
  _(tmain_bb1_out_prebuf, "valid") = _(tmain_bb1_in, "valid");
  _(tmain_bb1_in, "ready") = _(tmain_bb1_out_prebuf, "ready");
  _(tmain_bb1_live, "val1") = _(_(tmain_bb1_in, "contents"), "val1");
  _(tmain_bb1_live, "val8") = tmain_8;
  _(tmain_bb1_live, "live") = _(_(tmain_bb1_in, "contents"), "live");
  _(tmain_bb1_out_prebuf, "contents") = tmain_bb1_live;
  BBOutputBuf(tmain_11, tmain_bb1_out, tmain_bb1_out_prebuf);
  hierarchy_exit();

  // tmain BB 2 body
  hierarchy_enter("tmain_bb2");
  _(tmain_bb2_arb_in[0], "valid") = _(tmain_bb1_out[1], "valid");
  _(tmain_bb1_out[1], "ready") = _(tmain_bb2_arb_in[0], "ready");
  _(_(tmain_bb2_arb_in[0], "contents"), "live") = _(_(tmain_bb1_out[1], "contents"), "live");
  BBArbiter(tmain_bb2_in_prebuf, tmain_bb2_arb_in);
  BBInputBuf(tmain_bb2_in, tmain_bb2_in_prebuf);
  node tmain_bb2_run;  TAP(tmain_bb2_run);
    _(tmain_ret, "valid") = _(tmain_bb2_out_prebuf, "valid");
  _(tmain_bb2_out_prebuf, "ready") = _(tmain_ret, "ready");
  _(_(tmain_ret, "contents"), "live") = _(_(tmain_bb2_out_prebuf, "contents"), "live");
tmain_bb2_run = _(tmain_bb2_in, "valid") &&  _(tmain_bb2_in, "ready");
  _(tmain_bb2_out_prebuf, "valid") = _(tmain_bb2_in, "valid");
  _(tmain_bb2_in, "ready") = _(tmain_bb2_out_prebuf, "ready");
  _(tmain_bb2_live, "live") = _(_(tmain_bb2_in, "contents"), "live");
  _(tmain_bb2_out_prebuf, "contents") = tmain_bb2_live;
  hierarchy_exit();

  STATIC_VAR_GEN(tmain, x);
}
