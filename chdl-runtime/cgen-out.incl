  STATIC_VAR(main, x, ui<32>, 0x00000000, 2);

  typedef flit<chdl_void > main_call_t;
  typedef flit<chdl_void > main_ret_t;
  main_call_t main_call;
  main_ret_t main_ret;

  // main BB 0 declarations
  hierarchy_enter("main_bb0_decls");
  typedef flit<chdl_void > main_bb0_in_t;
  typedef flit<ag<STP("val0"), ui<32> > > main_bb0_out_t;
  main_bb0_in_t main_bb0_in_prebuf, main_bb0_in;
  TAP(main_bb0_in);
  main_bb0_out_t main_bb0_out_prebuf;
  vec<1, main_bb0_out_t> main_bb0_out;
  TAP(main_bb0_out_prebuf);
  vec<1, main_bb0_in_t> main_bb0_arb_in;
  hierarchy_exit();

  // main BB 1 declarations
  hierarchy_enter("main_bb1_decls");
  typedef flit<ag<STP("val1"), ui<32> > > main_bb1_in_t;
  typedef flit<ag<STP("val1"), ui<32> > > main_bb1_out_t;
  main_bb1_in_t main_bb1_in_prebuf, main_bb1_in;
  TAP(main_bb1_in);
  main_bb1_out_t main_bb1_out_prebuf;
  vec<2, main_bb1_out_t> main_bb1_out;
  TAP(main_bb1_out_prebuf);
  vec<2, main_bb1_in_t> main_bb1_arb_in;
  hierarchy_exit();

  // main BB 2 declarations
  hierarchy_enter("main_bb2_decls");
  typedef flit<ag<STP("val1"), ui<32> > > main_bb2_in_t;
  typedef flit<ag<STP("val1"), ui<32> > > main_bb2_out_t;
  main_bb2_in_t main_bb2_in_prebuf, main_bb2_in;
  TAP(main_bb2_in);
  main_bb2_out_t main_bb2_out_prebuf;
  vec<1, main_bb2_out_t> main_bb2_out;
  TAP(main_bb2_out_prebuf);
  vec<1, main_bb2_in_t> main_bb2_arb_in;
  hierarchy_exit();

  // main BB 3 declarations
  hierarchy_enter("main_bb3_decls");
  typedef flit<ag<STP("val1"), ui<32> > > main_bb3_in_t;
  typedef flit<ag<STP("val1"), ui<32> > > main_bb3_out_t;
  main_bb3_in_t main_bb3_in_prebuf, main_bb3_in;
  TAP(main_bb3_in);
  main_bb3_out_t main_bb3_out_prebuf;
  vec<1, main_bb3_out_t> main_bb3_out;
  TAP(main_bb3_out_prebuf);
  vec<1, main_bb3_in_t> main_bb3_arb_in;
  hierarchy_exit();

  // main BB 4 declarations
  hierarchy_enter("main_bb4_decls");
  typedef flit<ag<STP("val1"), ui<32> > > main_bb4_in_t;
  typedef flit<ag<STP("val11"), ui<32> > > main_bb4_out_t;
  main_bb4_in_t main_bb4_in_prebuf, main_bb4_in;
  TAP(main_bb4_in);
  main_bb4_out_t main_bb4_out_prebuf;
  vec<1, main_bb4_out_t> main_bb4_out;
  TAP(main_bb4_out_prebuf);
  vec<2, main_bb4_in_t> main_bb4_arb_in;
  hierarchy_exit();

  // main BB 0 body
  hierarchy_enter("main_bb0");
  _(main_bb0_arb_in[0], "valid") = _(main_call, "valid");
  _(main_call, "ready") = _(main_bb0_arb_in[0], "ready");
  Arbiter(main_bb0_in_prebuf, ArbRR<1>, main_bb0_arb_in);
  BBInputBuf(main_bb0_in, main_bb0_in_prebuf);  node main_bb0_run(_(main_bb0_in, "valid") && _(main_bb0_out_prebuf, "ready"));
  ui<32> main_0 = Lit<32>(0x00000000);
  tap("main_0", main_0);
  _(main_bb0_out_prebuf, "valid") = _(main_bb0_in, "valid");
  _(main_bb0_in, "ready") = _(main_bb0_out_prebuf, "ready");
  _(_(main_bb0_out_prebuf, "contents"), "val0") = main_0;
  BBOutputBuf(main_bb0_out, main_bb0_out_prebuf);
  hierarchy_exit();

  // main BB 1 body
  hierarchy_enter("main_bb1");
  _(main_bb1_arb_in[0], "valid") = _(main_bb0_out[0], "valid");
  _(main_bb0_out[0], "ready") = _(main_bb1_arb_in[0], "ready");
  // BB0 val 0 -> BB 1 val 1
  _(_(main_bb1_arb_in[0], "contents"), "val1") = _(_(main_bb0_out[0], "contents"), "val0");
  _(main_bb1_arb_in[1], "valid") = _(main_bb4_out[0], "valid");
  _(main_bb4_out[0], "ready") = _(main_bb1_arb_in[1], "ready");
  // BB4 val 11 -> BB 1 val 1
  _(_(main_bb1_arb_in[1], "contents"), "val1") = _(_(main_bb4_out[0], "contents"), "val11");
  Arbiter(main_bb1_in_prebuf, ArbRR<2>, main_bb1_arb_in);
  BBInputBuf(main_bb1_in, main_bb1_in_prebuf);  node main_bb1_run(_(main_bb1_in, "valid") && _(main_bb1_out_prebuf, "ready"));
    tap("main_1", _(_(main_bb1_in, "contents"), "val1"));
  ui<5> main_2 = Lit<5>(0x00);
  tap("main_2", main_2);
  node main_3 = _(_(main_bb1_in, "contents"), "val1")[0];
  tap("main_3", main_3);
  _(main_bb1_out_prebuf, "valid") = _(main_bb1_in, "valid");
  _(main_bb1_in, "ready") = _(main_bb1_out_prebuf, "ready");
  _(_(main_bb1_out_prebuf, "contents"), "val1") = _(_(main_bb1_in, "contents"), "val1");
  BBOutputBuf(main_3, main_bb1_out, main_bb1_out_prebuf);
  hierarchy_exit();

  // main BB 2 body
  hierarchy_enter("main_bb2");
  _(main_bb2_arb_in[0], "valid") = _(main_bb1_out[0], "valid");
  _(main_bb1_out[0], "ready") = _(main_bb2_arb_in[0], "ready");
  // BB1 val 1 -> BB 2 val 1
  _(_(main_bb2_arb_in[0], "contents"), "val1") = _(_(main_bb1_out[0], "contents"), "val1");
  Arbiter(main_bb2_in_prebuf, ArbRR<1>, main_bb2_arb_in);
  BBInputBuf(main_bb2_in, main_bb2_in_prebuf);  node main_bb2_run(_(main_bb2_in, "valid") && _(main_bb2_out_prebuf, "ready"));
  ui<32> main_4 = LD_STATIC(main, x);
  tap("main_4", main_4);
  ui<32> main_5 = main_4 + _(_(main_bb2_in, "contents"), "val1");
  tap("main_5", main_5);
  ST_STATIC(main, x, main_5, main_bb2_run, 0);
  _(main_bb2_out_prebuf, "valid") = _(main_bb2_in, "valid");
  _(main_bb2_in, "ready") = _(main_bb2_out_prebuf, "ready");
  _(_(main_bb2_out_prebuf, "contents"), "val1") = _(_(main_bb2_in, "contents"), "val1");
  BBOutputBuf(main_bb2_out, main_bb2_out_prebuf);
  hierarchy_exit();

  // main BB 3 body
  hierarchy_enter("main_bb3");
  _(main_bb3_arb_in[0], "valid") = _(main_bb1_out[1], "valid");
  _(main_bb1_out[1], "ready") = _(main_bb3_arb_in[0], "ready");
  // BB1 val 1 -> BB 3 val 1
  _(_(main_bb3_arb_in[0], "contents"), "val1") = _(_(main_bb1_out[1], "contents"), "val1");
  Arbiter(main_bb3_in_prebuf, ArbRR<1>, main_bb3_arb_in);
  BBInputBuf(main_bb3_in, main_bb3_in_prebuf);  node main_bb3_run(_(main_bb3_in, "valid") && _(main_bb3_out_prebuf, "ready"));
  ui<32> main_7 = LD_STATIC(main, x);
  tap("main_7", main_7);
  ui<32> main_8 = main_7 - _(_(main_bb3_in, "contents"), "val1");
  tap("main_8", main_8);
  ST_STATIC(main, x, main_8, main_bb3_run, 1);
  _(main_bb3_out_prebuf, "valid") = _(main_bb3_in, "valid");
  _(main_bb3_in, "ready") = _(main_bb3_out_prebuf, "ready");
  _(_(main_bb3_out_prebuf, "contents"), "val1") = _(_(main_bb3_in, "contents"), "val1");
  BBOutputBuf(main_bb3_out, main_bb3_out_prebuf);
  hierarchy_exit();

  // main BB 4 body
  hierarchy_enter("main_bb4");
  _(main_bb4_arb_in[0], "valid") = _(main_bb2_out[0], "valid");
  _(main_bb2_out[0], "ready") = _(main_bb4_arb_in[0], "ready");
  // BB2 val 1 -> BB 4 val 1
  _(_(main_bb4_arb_in[0], "contents"), "val1") = _(_(main_bb2_out[0], "contents"), "val1");
  _(main_bb4_arb_in[1], "valid") = _(main_bb3_out[0], "valid");
  _(main_bb3_out[0], "ready") = _(main_bb4_arb_in[1], "ready");
  // BB3 val 1 -> BB 4 val 1
  _(_(main_bb4_arb_in[1], "contents"), "val1") = _(_(main_bb3_out[0], "contents"), "val1");
  Arbiter(main_bb4_in_prebuf, ArbRR<2>, main_bb4_arb_in);
  BBInputBuf(main_bb4_in, main_bb4_in_prebuf);  node main_bb4_run(_(main_bb4_in, "valid") && _(main_bb4_out_prebuf, "ready"));
  ui<32> main_10 = Lit<32>(0x00000001);
  tap("main_10", main_10);
  ui<32> main_11 = _(_(main_bb4_in, "contents"), "val1") + main_10;
  tap("main_11", main_11);
  _(main_bb4_out_prebuf, "valid") = _(main_bb4_in, "valid");
  _(main_bb4_in, "ready") = _(main_bb4_out_prebuf, "ready");
  _(_(main_bb4_out_prebuf, "contents"), "val11") = main_11;
  BBOutputBuf2(main_bb4_out, main_bb4_out_prebuf);
  hierarchy_exit();

  STATIC_VAR_GEN(main, x);
