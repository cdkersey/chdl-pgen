
  typedef flit<chdl_void > main_call_t;
  typedef flit<chdl_void > main_ret_t;
  main_call_t main_call;
  main_ret_t main_ret;

  // main BB 0 declarations
  typedef flit<chdl_void > main_bb0_in_t;
  typedef flit<ag<STP("val0"), ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > > > main_bb0_out_t;
  main_bb0_in_t main_bb0_in;
TAP(main_bb0_in);
  main_bb0_out_t main_bb0_out_prebuf;
  vec<1, main_bb0_out_t> main_bb0_out;
TAP(main_bb0_out_prebuf);
  vec<1, main_bb0_in_t> main_bb0_arb_in;

  // main BB 1 declarations
  typedef flit<ag<STP("val1"), ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > > > main_bb1_in_t;
  typedef flit<ag<STP("val10"), ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > > > main_bb1_out_t;
  main_bb1_in_t main_bb1_in;
TAP(main_bb1_in);
  main_bb1_out_t main_bb1_out_prebuf;
  vec<1, main_bb1_out_t> main_bb1_out;
TAP(main_bb1_out_prebuf);
  vec<2, main_bb1_in_t> main_bb1_arb_in;

  // main BB 0 body
  _(main_bb0_arb_in[0], "valid") = _(main_call, "valid");
  _(main_call, "ready") = _(main_bb0_arb_in[0], "ready");
  Arbiter(main_bb0_in, ArbRR<1>, main_bb0_arb_in);
  node main_bb0_run(_(main_bb0_in, "valid") && _(main_bb0_out_prebuf, "ready"));
  ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > main_0 = ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > >(Lit<64>(0x00000000));
  tap("main_0", main_0);
  _(main_bb0_out_prebuf, "valid") = _(main_bb0_in, "valid");
  _(main_bb0_in, "ready") = _(main_bb0_out_prebuf, "ready");
  _(_(main_bb0_out_prebuf, "contents"), "val0") = main_0;
  BBOutputBuf(main_bb0_out, main_bb0_out_prebuf);

  // main BB 1 body
  _(main_bb1_arb_in[0], "valid") = _(main_bb0_out[0], "valid");
  _(main_bb0_out[0], "ready") = _(main_bb1_arb_in[0], "ready");
  // BB0 val 0 -> BB 1 val 1
  _(_(main_bb1_arb_in[0], "contents"), "val1") = _(_(main_bb0_out[0], "contents"), "val0");
  _(main_bb1_arb_in[1], "valid") = _(main_bb1_out[0], "valid");
  _(main_bb1_out[0], "ready") = _(main_bb1_arb_in[1], "ready");
  // BB1 val 10 -> BB 1 val 1
  _(_(main_bb1_arb_in[1], "contents"), "val1") = _(_(main_bb1_out[0], "contents"), "val10");
  Arbiter(main_bb1_in, ArbRR<2>, main_bb1_arb_in);
  node main_bb1_run(_(main_bb1_in, "valid") && _(main_bb1_out_prebuf, "ready"));
    tap("main_1", _(_(main_bb1_in, "contents"), "val1"));
  ui<3> main_2 = Lit<3>(0x02);
  tap("main_2", main_2);
  ui<3> main_3 = Lit<3>(0x05);
  tap("main_3", main_3);
  ui<32> main_4 = _(_(_(main_bb1_in, "contents"), "val1"), "a");
  tap("main_4", main_4);
  ui<32> main_5 = _(_(_(main_bb1_in, "contents"), "val1"), "b");
  tap("main_5", main_5);
  ui<32> main_6 = Lit<32>(0x00000001);
  tap("main_6", main_6);
  ui<32> main_7 = main_4 + main_6;
  tap("main_7", main_7);
  ui<32> main_8 = main_5 - main_6;
  tap("main_8", main_8);
  ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > main_9;
  Flatten(main_9) = ~~Flatten(_(_(main_bb1_in, "contents"), "val1"));
  _(main_9, "a") = main_7;
;
  tap("main_9", main_9);
  ag<STP("a"), ui<32>, ag<STP("b"), ui<32> > > main_10;
  Flatten(main_10) = ~~Flatten(main_9);
  _(main_10, "b") = main_8;
;
  tap("main_10", main_10);
  _(main_bb1_out_prebuf, "valid") = _(main_bb1_in, "valid");
  _(main_bb1_in, "ready") = _(main_bb1_out_prebuf, "ready");
  _(_(main_bb1_out_prebuf, "contents"), "val10") = main_10;
  BBOutputBuf(main_bb1_out, main_bb1_out_prebuf);

